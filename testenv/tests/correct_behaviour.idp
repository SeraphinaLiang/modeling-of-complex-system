// DIFFERENT SCENARIOS TESTING CORRECT BEHAVIOUR

// The elevator does not move if there are no requests and doors are Closed()
structure S_t_1 : V_student {
	Time = { 0..3 }
    Floor = {0..2}
    MakeRequest = {}
}

// Single request at the start
structure S_t_2 : V_student {
    Time = { 0..5 }
    Floor = {0..2}
    MakeRequest = {0,1;}
}

// The request appears on the elevators way
structure S_t_3 : V_student {
    Time = { 0..5 }
    Floor = {0..2}
    MakeRequest = {0,2;1,1;}
}

// The request appears below while the elevator goes up
structure S_t_4 : V_student {
    Time = { 0..5 }
    Floor = {0..2}
    MakeRequest = {0,2;1,0;}
}

// Correct behavior check
structure S_t_5 : V_student {
    Time = {0..20}
    Floor = {0..9}
    MakeRequest = {0, 4; 5, 2; 5, 7}
}

// Correct behavior check and efficiency
structure S_t_6 : V_student {
    Time = {0..30}
    Floor = {0..9}
    MakeRequest = {0, 4; 6, 2; 6, 7; 7, 8; 7, 9}
}

// Correct behavior check and efficiency
structure S_t_7 : V_student {
    Time = {0..30}
    Floor = {0..9}
    MakeRequest = {0, 4; 7, 4; 3, 7}
}

// Checking efficiency
structure S_t_8 : V_student {
    Time = {0..50}
    Floor = {0..9}
    MakeRequest = {0, 2; 0, 6; 2, 4; 3, 7; 8, 3; 9, 4; 17, 9; 19, 0; 19, 1; 44, 7}
}


//CORRECT STRUCTURES FOR PROPOSED SCENARIOS

structure S_t_1_sol : V_fixed {
    Floor = { 0..2 }
    Time = { 0..3 }
    MakeRequest = {  }
    UnansweredRequest = {  }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Closed() }
    ElPosition = { 0,0; 1,0; 2,0; 3,0 }
    Next = { 0,1; 1,2; 2,3 }
    Start = 0
}

structure S_t_2_sol : V_fixed {
    Floor = { 0..2 }
    Time = { 0..5 }
    MakeRequest = { 0,1 }
    UnansweredRequest = { 1,1; 2,1; 3,1 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Open(); 4,Closed(); 5,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,1; 4,1; 5,1 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5 }
    Start = 0
}

structure S_t_3_sol : V_fixed {
    Floor = { 0..2 }
    Time = { 0..5 }
    MakeRequest = { 0,2; 1,1 }
    UnansweredRequest = { 1,2; 2,1; 2,2; 3,1; 3,2; 4,2; 5,2 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Open(); 4,Closed(); 5,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,1; 4,1; 5,2 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5 }
    Start = 0
}

structure S_t_4_sol : V_fixed {
    Floor = { 0..2 }
    Time = { 0..5 }
    MakeRequest = { 0,2; 1,0 }
    UnansweredRequest = { 1,2; 2,0; 2,2; 3,0; 3,2; 4,0; 4,2; 5,0 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Closed(); 4,Open(); 5,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,2; 4,2; 5,2 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5 }
    Start = 0
}

structure S_t_5_sol : V_fixed {
    Floor = { 0..9 }
    Time = { 0..20 }
    MakeRequest = { 0,4; 5,2; 5,7 }
    UnansweredRequest = { 1,4; 2,4; 3,4; 4,4; 5,4; 6,2; 6,4; 6,7; 7,2; 7,7; 8,2; 8,7; 9,2; 9,7; 10,2; 10,7; 11,2; 11,7; 12,2; 13,2; 14,2; 15,2; 16,2; 17,2; 18,2 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Closed(); 4,Closed(); 5,Closed(); 6,Open(); 7,Closed(); 8,Closed(); 9,Closed(); 10,Closed(); 11,Open(); 12,Closed(); 13,Closed(); 14,Closed(); 15,Closed(); 16,Closed(); 17,Closed(); 18,Open(); 19,Closed(); 20,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,2; 4,3; 5,4; 6,4; 7,4; 8,5; 9,6; 10,7; 11,7; 12,7; 13,6; 14,5; 15,4; 16,3; 17,2; 18,2; 19,2; 20,2 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5; 5,6; 6,7; 7,8; 8,9; 9,10; 10,11; 11,12; 12,13; 13,14; 14,15; 15,16; 16,17; 17,18; 18,19; 19,20 }
    Start = 0
}

structure S_t_6_sol : V_fixed {
    Floor = { 0..9 }
    Time = { 0..30 }
    MakeRequest = { 0,4; 6,2; 6,7; 7,8; 7,9 }
    UnansweredRequest = { 1,4; 2,4; 3,4; 4,4; 5,4; 6,4; 7,2; 7,7; 8,2; 8,7; 8,8; 8,9; 9,2; 9,7; 9,8; 9,9; 10,2; 10,7; 10,8; 10,9; 11,2; 11,7; 11,8; 11,9; 12,2; 12,8; 12,9; 13,2; 13,8; 13,9; 14,2; 14,8; 14,9; 15,2; 15,9; 16,2; 16,9; 17,2; 17,9; 18,2; 19,2; 20,2; 21,2; 22,2; 23,2; 24,2; 25,2; 26,2 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Closed(); 4,Closed(); 5,Closed(); 6,Open(); 7,Closed(); 8,Closed(); 9,Closed(); 10,Closed(); 11,Open(); 12,Closed(); 13,Closed(); 14,Open(); 15,Closed(); 16,Closed(); 17,Open(); 18,Closed(); 19,Closed(); 20,Closed(); 21,Closed(); 22,Closed(); 23,Closed(); 24,Closed(); 25,Closed(); 26,Open(); 27,Closed(); 28,Closed(); 29,Closed(); 30,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,2; 4,3; 5,4; 6,4; 7,4; 8,5; 9,6; 10,7; 11,7; 12,7; 13,8; 14,8; 15,8; 16,9; 17,9; 18,9; 19,8; 20,7; 21,6; 22,5; 23,4; 24,3; 25,2; 26,2; 27,2; 28,2; 29,2; 30,2 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5; 5,6; 6,7; 7,8; 8,9; 9,10; 10,11; 11,12; 12,13; 13,14; 14,15; 15,16; 16,17; 17,18; 18,19; 19,20; 20,21; 21,22; 22,23; 23,24; 24,25; 25,26; 26,27; 27,28; 28,29; 29,30 }
    Start = 0
}

structure S_t_7_sol : V_fixed {
    Floor = { 0..9 }
    Time = { 0..30 }
    MakeRequest = { 0,4; 3,7; 7,4 }
    UnansweredRequest = { 1,4; 2,4; 3,4; 4,4; 4,7; 5,4; 5,7; 6,4; 6,7; 7,7; 8,4; 8,7; 9,4; 9,7; 10,4; 10,7; 11,4; 11,7; 12,4; 13,4; 14,4; 15,4; 16,4 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Closed(); 4,Closed(); 5,Closed(); 6,Open(); 7,Closed(); 8,Closed(); 9,Closed(); 10,Closed(); 11,Open(); 12,Closed(); 13,Closed(); 14,Closed(); 15,Closed(); 16,Open(); 17,Closed(); 18,Closed(); 19,Closed(); 20,Closed(); 21,Closed(); 22,Closed(); 23,Closed(); 24,Closed(); 25,Closed(); 26,Closed(); 27,Closed(); 28,Closed(); 29,Closed(); 30,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,2; 4,3; 5,4; 6,4; 7,4; 8,5; 9,6; 10,7; 11,7; 12,7; 13,6; 14,5; 15,4; 16,4; 17,4; 18,4; 19,4; 20,4; 21,4; 22,4; 23,4; 24,4; 25,4; 26,4; 27,4; 28,4; 29,4; 30,4 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5; 5,6; 6,7; 7,8; 8,9; 9,10; 10,11; 11,12; 12,13; 13,14; 14,15; 15,16; 16,17; 17,18; 18,19; 19,20; 20,21; 21,22; 22,23; 23,24; 24,25; 25,26; 26,27; 27,28; 28,29; 29,30 }
    Start = 0
}

structure S_t_8_sol : V_fixed {
    Floor = { 0..9 }
    Time = { 0..50 }
    MakeRequest = { 0,2; 0,6; 2,4; 3,7; 8,3; 9,4; 17,9; 19,0; 19,1; 44,7 }
    UnansweredRequest = { 1,2; 1,6; 2,2; 2,6; 3,2; 3,4; 3,6; 4,2; 4,4; 4,6; 4,7; 5,4; 5,6; 5,7; 6,4; 6,6; 6,7; 7,4; 7,6; 7,7; 8,4; 8,6; 8,7; 9,3; 9,6; 9,7; 10,3; 10,4; 10,6; 10,7; 11,3; 11,4; 11,6; 11,7; 12,3; 12,4; 12,6; 12,7; 13,3; 13,4; 13,7; 14,3; 14,4; 14,7; 15,3; 15,4; 15,7; 16,3; 16,4; 17,3; 17,4; 18,3; 18,4; 18,9; 19,3; 19,4; 19,9; 20,0; 20,1; 20,3; 20,4; 20,9; 21,0; 21,1; 21,3; 21,9; 22,0; 22,1; 22,3; 22,9; 23,0; 23,1; 23,3; 23,9; 24,0; 24,1; 24,9; 25,0; 25,1; 25,9; 26,0; 26,1; 26,9; 27,0; 27,1; 27,9; 28,0; 28,9; 29,0; 29,9; 30,0; 30,9; 31,9; 32,9; 33,9; 34,9; 35,9; 36,9; 37,9; 38,9; 39,9; 40,9; 41,9; 45,7; 46,7; 47,7; 48,7 }
    ElDoorState = { 0,Closed(); 1,Closed(); 2,Closed(); 3,Closed(); 4,Open(); 5,Closed(); 6,Closed(); 7,Closed(); 8,Open(); 9,Closed(); 10,Closed(); 11,Closed(); 12,Open(); 13,Closed(); 14,Closed(); 15,Open(); 16,Closed(); 17,Closed(); 18,Closed(); 19,Closed(); 20,Open(); 21,Closed(); 22,Closed(); 23,Open(); 24,Closed(); 25,Closed(); 26,Closed(); 27,Open(); 28,Closed(); 29,Closed(); 30,Open(); 31,Closed(); 32,Closed(); 33,Closed(); 34,Closed(); 35,Closed(); 36,Closed(); 37,Closed(); 38,Closed(); 39,Closed(); 40,Closed(); 41,Open(); 42,Closed(); 43,Closed(); 44,Closed(); 45,Closed(); 46,Closed(); 47,Closed(); 48,Open(); 49,Closed(); 50,Closed() }
    ElPosition = { 0,0; 1,0; 2,1; 3,2; 4,2; 5,2; 6,3; 7,4; 8,4; 9,4; 10,5; 11,6; 12,6; 13,6; 14,7; 15,7; 16,7; 17,6; 18,5; 19,4; 20,4; 21,4; 22,3; 23,3; 24,3; 25,2; 26,1; 27,1; 28,1; 29,0; 30,0; 31,0; 32,1; 33,2; 34,3; 35,4; 36,5; 37,6; 38,7; 39,8; 40,9; 41,9; 42,9; 43,9; 44,9; 45,9; 46,8; 47,7; 48,7; 49,7; 50,7 }
    Next = { 0,1; 1,2; 2,3; 3,4; 4,5; 5,6; 6,7; 7,8; 8,9; 9,10; 10,11; 11,12; 12,13; 13,14; 14,15; 15,16; 16,17; 17,18; 18,19; 19,20; 20,21; 21,22; 22,23; 23,24; 24,25; 25,26; 26,27; 27,28; 28,29; 29,30; 30,31; 31,32; 32,33; 33,34; 34,35; 35,36; 36,37; 37,38; 38,39; 39,40; 40,41; 41,42; 42,43; 43,44; 44,45; 45,46; 46,47; 47,48; 48,49; 49,50 }
    Start = 0
}
